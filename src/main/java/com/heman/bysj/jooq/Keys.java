/*
 * This file is generated by jOOQ.
 */
package com.heman.bysj.jooq;


import com.heman.bysj.jooq.tables.Leave;
import com.heman.bysj.jooq.tables.Student;
import com.heman.bysj.jooq.tables.Teacher;
import com.heman.bysj.jooq.tables.records.LeaveRecord;
import com.heman.bysj.jooq.tables.records.StudentRecord;
import com.heman.bysj.jooq.tables.records.TeacherRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>bysj</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<LeaveRecord, Integer> IDENTITY_LEAVE = Identities0.IDENTITY_LEAVE;
    public static final Identity<StudentRecord, Integer> IDENTITY_STUDENT = Identities0.IDENTITY_STUDENT;
    public static final Identity<TeacherRecord, Integer> IDENTITY_TEACHER = Identities0.IDENTITY_TEACHER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<LeaveRecord> KEY_LEAVE_PRIMARY = UniqueKeys0.KEY_LEAVE_PRIMARY;
    public static final UniqueKey<StudentRecord> KEY_STUDENT_PRIMARY = UniqueKeys0.KEY_STUDENT_PRIMARY;
    public static final UniqueKey<StudentRecord> KEY_STUDENT_SUSERNAME_UNIQUE = UniqueKeys0.KEY_STUDENT_SUSERNAME_UNIQUE;
    public static final UniqueKey<TeacherRecord> KEY_TEACHER_PRIMARY = UniqueKeys0.KEY_TEACHER_PRIMARY;
    public static final UniqueKey<TeacherRecord> KEY_TEACHER_TUSERNAME_UNIQUE = UniqueKeys0.KEY_TEACHER_TUSERNAME_UNIQUE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<LeaveRecord, TeacherRecord> LEAVE_TID_FORIEGINKEY = ForeignKeys0.LEAVE_TID_FORIEGINKEY;
    public static final ForeignKey<StudentRecord, TeacherRecord> STUDENT_TID_FORIENGINKEY = ForeignKeys0.STUDENT_TID_FORIENGINKEY;
    public static final ForeignKey<TeacherRecord, TeacherRecord> TEACHER_SUPERIOR_KEY = ForeignKeys0.TEACHER_SUPERIOR_KEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<LeaveRecord, Integer> IDENTITY_LEAVE = Internal.createIdentity(Leave.LEAVE, Leave.LEAVE.LID);
        public static Identity<StudentRecord, Integer> IDENTITY_STUDENT = Internal.createIdentity(Student.STUDENT, Student.STUDENT.SID);
        public static Identity<TeacherRecord, Integer> IDENTITY_TEACHER = Internal.createIdentity(Teacher.TEACHER, Teacher.TEACHER.TID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<LeaveRecord> KEY_LEAVE_PRIMARY = Internal.createUniqueKey(Leave.LEAVE, "KEY_leave_PRIMARY", Leave.LEAVE.LID);
        public static final UniqueKey<StudentRecord> KEY_STUDENT_PRIMARY = Internal.createUniqueKey(Student.STUDENT, "KEY_student_PRIMARY", Student.STUDENT.SID);
        public static final UniqueKey<StudentRecord> KEY_STUDENT_SUSERNAME_UNIQUE = Internal.createUniqueKey(Student.STUDENT, "KEY_student_susername_unique", Student.STUDENT.USERNAME);
        public static final UniqueKey<TeacherRecord> KEY_TEACHER_PRIMARY = Internal.createUniqueKey(Teacher.TEACHER, "KEY_teacher_PRIMARY", Teacher.TEACHER.TID);
        public static final UniqueKey<TeacherRecord> KEY_TEACHER_TUSERNAME_UNIQUE = Internal.createUniqueKey(Teacher.TEACHER, "KEY_teacher_tusername_unique", Teacher.TEACHER.USERNAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<LeaveRecord, TeacherRecord> LEAVE_TID_FORIEGINKEY = Internal.createForeignKey(com.heman.bysj.jooq.Keys.KEY_TEACHER_PRIMARY, Leave.LEAVE, "leave_tid_forieginkey", Leave.LEAVE.TID);
        public static final ForeignKey<StudentRecord, TeacherRecord> STUDENT_TID_FORIENGINKEY = Internal.createForeignKey(com.heman.bysj.jooq.Keys.KEY_TEACHER_PRIMARY, Student.STUDENT, "student_tid_forienginkey", Student.STUDENT.TID);
        public static final ForeignKey<TeacherRecord, TeacherRecord> TEACHER_SUPERIOR_KEY = Internal.createForeignKey(com.heman.bysj.jooq.Keys.KEY_TEACHER_PRIMARY, Teacher.TEACHER, "teacher_superior_key", Teacher.TEACHER.SUPERIOR);
    }
}
