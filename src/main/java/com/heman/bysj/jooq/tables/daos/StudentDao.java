/*
 * This file is generated by jOOQ.
 */
package com.heman.bysj.jooq.tables.daos;


import com.heman.bysj.jooq.tables.Student;
import com.heman.bysj.jooq.tables.records.StudentRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentDao extends DAOImpl<StudentRecord, com.heman.bysj.jooq.tables.pojos.Student, Integer> {

    /**
     * Create a new StudentDao without any configuration
     */
    public StudentDao() {
        super(Student.STUDENT, com.heman.bysj.jooq.tables.pojos.Student.class);
    }

    /**
     * Create a new StudentDao with an attached configuration
     */
    public StudentDao(Configuration configuration) {
        super(Student.STUDENT, com.heman.bysj.jooq.tables.pojos.Student.class, configuration);
    }

    @Override
    public Integer getId(com.heman.bysj.jooq.tables.pojos.Student object) {
        return object.getSid();
    }

    /**
     * Fetch records that have <code>sid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchRangeOfSid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Student.STUDENT.SID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sid IN (values)</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchBySid(Integer... values) {
        return fetch(Student.STUDENT.SID, values);
    }

    /**
     * Fetch a unique record that has <code>sid = value</code>
     */
    public com.heman.bysj.jooq.tables.pojos.Student fetchOneBySid(Integer value) {
        return fetchOne(Student.STUDENT.SID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Student.STUDENT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchByName(String... values) {
        return fetch(Student.STUDENT.NAME, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Student.STUDENT.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchByUsername(String... values) {
        return fetch(Student.STUDENT.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public com.heman.bysj.jooq.tables.pojos.Student fetchOneByUsername(String value) {
        return fetchOne(Student.STUDENT.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(Student.STUDENT.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchByPassword(String... values) {
        return fetch(Student.STUDENT.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>grade BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchRangeOfGrade(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Student.STUDENT.GRADE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>grade IN (values)</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchByGrade(Integer... values) {
        return fetch(Student.STUDENT.GRADE, values);
    }

    /**
     * Fetch records that have <code>profession BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchRangeOfProfession(String lowerInclusive, String upperInclusive) {
        return fetchRange(Student.STUDENT.PROFESSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>profession IN (values)</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchByProfession(String... values) {
        return fetch(Student.STUDENT.PROFESSION, values);
    }

    /**
     * Fetch records that have <code>class_ BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchRangeOfClass_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Student.STUDENT.CLASS_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>class_ IN (values)</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchByClass_(String... values) {
        return fetch(Student.STUDENT.CLASS_, values);
    }

    /**
     * Fetch records that have <code>tid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchRangeOfTid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Student.STUDENT.TID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tid IN (values)</code>
     */
    public List<com.heman.bysj.jooq.tables.pojos.Student> fetchByTid(Integer... values) {
        return fetch(Student.STUDENT.TID, values);
    }
}
