/*
 * This file is generated by jOOQ.
 */
package com.heman.bysj.jooq.tables;


import com.heman.bysj.jooq.Bysj;
import com.heman.bysj.jooq.Indexes;
import com.heman.bysj.jooq.Keys;
import com.heman.bysj.jooq.tables.records.ActRuExecutionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActRuExecution extends TableImpl<ActRuExecutionRecord> {

    private static final long serialVersionUID = 1449833073;

    /**
     * The reference instance of <code>bysj.act_ru_execution</code>
     */
    public static final ActRuExecution ACT_RU_EXECUTION = new ActRuExecution();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActRuExecutionRecord> getRecordType() {
        return ActRuExecutionRecord.class;
    }

    /**
     * The column <code>bysj.act_ru_execution.ID_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> ID_ = createField(DSL.name("ID_"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bysj.act_ru_execution.REV_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> REV_ = createField(DSL.name("REV_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.PROC_INST_ID_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> PROC_INST_ID_ = createField(DSL.name("PROC_INST_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_ru_execution.BUSINESS_KEY_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> BUSINESS_KEY_ = createField(DSL.name("BUSINESS_KEY_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_ru_execution.PARENT_ID_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> PARENT_ID_ = createField(DSL.name("PARENT_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_ru_execution.PROC_DEF_ID_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> PROC_DEF_ID_ = createField(DSL.name("PROC_DEF_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_ru_execution.SUPER_EXEC_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> SUPER_EXEC_ = createField(DSL.name("SUPER_EXEC_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_ru_execution.ROOT_PROC_INST_ID_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> ROOT_PROC_INST_ID_ = createField(DSL.name("ROOT_PROC_INST_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_ru_execution.ACT_ID_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> ACT_ID_ = createField(DSL.name("ACT_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_ru_execution.IS_ACTIVE_</code>.
     */
    public final TableField<ActRuExecutionRecord, Byte> IS_ACTIVE_ = createField(DSL.name("IS_ACTIVE_"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bysj.act_ru_execution.IS_CONCURRENT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Byte> IS_CONCURRENT_ = createField(DSL.name("IS_CONCURRENT_"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bysj.act_ru_execution.IS_SCOPE_</code>.
     */
    public final TableField<ActRuExecutionRecord, Byte> IS_SCOPE_ = createField(DSL.name("IS_SCOPE_"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bysj.act_ru_execution.IS_EVENT_SCOPE_</code>.
     */
    public final TableField<ActRuExecutionRecord, Byte> IS_EVENT_SCOPE_ = createField(DSL.name("IS_EVENT_SCOPE_"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bysj.act_ru_execution.IS_MI_ROOT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Byte> IS_MI_ROOT_ = createField(DSL.name("IS_MI_ROOT_"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bysj.act_ru_execution.SUSPENSION_STATE_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> SUSPENSION_STATE_ = createField(DSL.name("SUSPENSION_STATE_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.CACHED_ENT_STATE_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> CACHED_ENT_STATE_ = createField(DSL.name("CACHED_ENT_STATE_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.TENANT_ID_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> TENANT_ID_ = createField(DSL.name("TENANT_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>bysj.act_ru_execution.NAME_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> NAME_ = createField(DSL.name("NAME_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_ru_execution.START_TIME_</code>.
     */
    public final TableField<ActRuExecutionRecord, Timestamp> START_TIME_ = createField(DSL.name("START_TIME_"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bysj.act_ru_execution.START_USER_ID_</code>.
     */
    public final TableField<ActRuExecutionRecord, String> START_USER_ID_ = createField(DSL.name("START_USER_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_ru_execution.LOCK_TIME_</code>.
     */
    public final TableField<ActRuExecutionRecord, Timestamp> LOCK_TIME_ = createField(DSL.name("LOCK_TIME_"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bysj.act_ru_execution.IS_COUNT_ENABLED_</code>.
     */
    public final TableField<ActRuExecutionRecord, Byte> IS_COUNT_ENABLED_ = createField(DSL.name("IS_COUNT_ENABLED_"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bysj.act_ru_execution.EVT_SUBSCR_COUNT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> EVT_SUBSCR_COUNT_ = createField(DSL.name("EVT_SUBSCR_COUNT_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.TASK_COUNT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> TASK_COUNT_ = createField(DSL.name("TASK_COUNT_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.JOB_COUNT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> JOB_COUNT_ = createField(DSL.name("JOB_COUNT_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.TIMER_JOB_COUNT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> TIMER_JOB_COUNT_ = createField(DSL.name("TIMER_JOB_COUNT_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.SUSP_JOB_COUNT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> SUSP_JOB_COUNT_ = createField(DSL.name("SUSP_JOB_COUNT_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.DEADLETTER_JOB_COUNT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> DEADLETTER_JOB_COUNT_ = createField(DSL.name("DEADLETTER_JOB_COUNT_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.VAR_COUNT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> VAR_COUNT_ = createField(DSL.name("VAR_COUNT_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_execution.ID_LINK_COUNT_</code>.
     */
    public final TableField<ActRuExecutionRecord, Integer> ID_LINK_COUNT_ = createField(DSL.name("ID_LINK_COUNT_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>bysj.act_ru_execution</code> table reference
     */
    public ActRuExecution() {
        this(DSL.name("act_ru_execution"), null);
    }

    /**
     * Create an aliased <code>bysj.act_ru_execution</code> table reference
     */
    public ActRuExecution(String alias) {
        this(DSL.name(alias), ACT_RU_EXECUTION);
    }

    /**
     * Create an aliased <code>bysj.act_ru_execution</code> table reference
     */
    public ActRuExecution(Name alias) {
        this(alias, ACT_RU_EXECUTION);
    }

    private ActRuExecution(Name alias, Table<ActRuExecutionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActRuExecution(Name alias, Table<ActRuExecutionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ActRuExecution(Table<O> child, ForeignKey<O, ActRuExecutionRecord> key) {
        super(child, key, ACT_RU_EXECUTION);
    }

    @Override
    public Schema getSchema() {
        return Bysj.BYSJ;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACT_RU_EXECUTION_ACT_FK_EXE_PARENT, Indexes.ACT_RU_EXECUTION_ACT_FK_EXE_PROCDEF, Indexes.ACT_RU_EXECUTION_ACT_FK_EXE_PROCINST, Indexes.ACT_RU_EXECUTION_ACT_FK_EXE_SUPER, Indexes.ACT_RU_EXECUTION_ACT_IDC_EXEC_ROOT, Indexes.ACT_RU_EXECUTION_ACT_IDX_EXEC_BUSKEY, Indexes.ACT_RU_EXECUTION_PRIMARY);
    }

    @Override
    public UniqueKey<ActRuExecutionRecord> getPrimaryKey() {
        return Keys.KEY_ACT_RU_EXECUTION_PRIMARY;
    }

    @Override
    public List<UniqueKey<ActRuExecutionRecord>> getKeys() {
        return Arrays.<UniqueKey<ActRuExecutionRecord>>asList(Keys.KEY_ACT_RU_EXECUTION_PRIMARY);
    }

    @Override
    public List<ForeignKey<ActRuExecutionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ActRuExecutionRecord, ?>>asList(Keys.ACT_FK_EXE_PROCINST, Keys.ACT_FK_EXE_PARENT, Keys.ACT_FK_EXE_PROCDEF, Keys.ACT_FK_EXE_SUPER);
    }

    public com.heman.bysj.jooq.tables.ActRuExecution actFkExeProcinst() {
        return new com.heman.bysj.jooq.tables.ActRuExecution(this, Keys.ACT_FK_EXE_PROCINST);
    }

    public com.heman.bysj.jooq.tables.ActRuExecution actFkExeParent() {
        return new com.heman.bysj.jooq.tables.ActRuExecution(this, Keys.ACT_FK_EXE_PARENT);
    }

    public ActReProcdef actReProcdef() {
        return new ActReProcdef(this, Keys.ACT_FK_EXE_PROCDEF);
    }

    public com.heman.bysj.jooq.tables.ActRuExecution actFkExeSuper() {
        return new com.heman.bysj.jooq.tables.ActRuExecution(this, Keys.ACT_FK_EXE_SUPER);
    }

    @Override
    public ActRuExecution as(String alias) {
        return new ActRuExecution(DSL.name(alias), this);
    }

    @Override
    public ActRuExecution as(Name alias) {
        return new ActRuExecution(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuExecution rename(String name) {
        return new ActRuExecution(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuExecution rename(Name name) {
        return new ActRuExecution(name, null);
    }
}
