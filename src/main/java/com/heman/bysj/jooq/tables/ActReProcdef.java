/*
 * This file is generated by jOOQ.
 */
package com.heman.bysj.jooq.tables;


import com.heman.bysj.jooq.Bysj;
import com.heman.bysj.jooq.Indexes;
import com.heman.bysj.jooq.Keys;
import com.heman.bysj.jooq.tables.records.ActReProcdefRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActReProcdef extends TableImpl<ActReProcdefRecord> {

    private static final long serialVersionUID = 2059814431;

    /**
     * The reference instance of <code>bysj.act_re_procdef</code>
     */
    public static final ActReProcdef ACT_RE_PROCDEF = new ActReProcdef();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActReProcdefRecord> getRecordType() {
        return ActReProcdefRecord.class;
    }

    /**
     * The column <code>bysj.act_re_procdef.ID_</code>.
     */
    public final TableField<ActReProcdefRecord, String> ID_ = createField(DSL.name("ID_"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bysj.act_re_procdef.REV_</code>.
     */
    public final TableField<ActReProcdefRecord, Integer> REV_ = createField(DSL.name("REV_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_re_procdef.CATEGORY_</code>.
     */
    public final TableField<ActReProcdefRecord, String> CATEGORY_ = createField(DSL.name("CATEGORY_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_re_procdef.NAME_</code>.
     */
    public final TableField<ActReProcdefRecord, String> NAME_ = createField(DSL.name("NAME_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_re_procdef.KEY_</code>.
     */
    public final TableField<ActReProcdefRecord, String> KEY_ = createField(DSL.name("KEY_"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>bysj.act_re_procdef.VERSION_</code>.
     */
    public final TableField<ActReProcdefRecord, Integer> VERSION_ = createField(DSL.name("VERSION_"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bysj.act_re_procdef.DEPLOYMENT_ID_</code>.
     */
    public final TableField<ActReProcdefRecord, String> DEPLOYMENT_ID_ = createField(DSL.name("DEPLOYMENT_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_re_procdef.RESOURCE_NAME_</code>.
     */
    public final TableField<ActReProcdefRecord, String> RESOURCE_NAME_ = createField(DSL.name("RESOURCE_NAME_"), org.jooq.impl.SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>bysj.act_re_procdef.DGRM_RESOURCE_NAME_</code>.
     */
    public final TableField<ActReProcdefRecord, String> DGRM_RESOURCE_NAME_ = createField(DSL.name("DGRM_RESOURCE_NAME_"), org.jooq.impl.SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>bysj.act_re_procdef.DESCRIPTION_</code>.
     */
    public final TableField<ActReProcdefRecord, String> DESCRIPTION_ = createField(DSL.name("DESCRIPTION_"), org.jooq.impl.SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>bysj.act_re_procdef.HAS_START_FORM_KEY_</code>.
     */
    public final TableField<ActReProcdefRecord, Byte> HAS_START_FORM_KEY_ = createField(DSL.name("HAS_START_FORM_KEY_"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bysj.act_re_procdef.HAS_GRAPHICAL_NOTATION_</code>.
     */
    public final TableField<ActReProcdefRecord, Byte> HAS_GRAPHICAL_NOTATION_ = createField(DSL.name("HAS_GRAPHICAL_NOTATION_"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bysj.act_re_procdef.SUSPENSION_STATE_</code>.
     */
    public final TableField<ActReProcdefRecord, Integer> SUSPENSION_STATE_ = createField(DSL.name("SUSPENSION_STATE_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_re_procdef.TENANT_ID_</code>.
     */
    public final TableField<ActReProcdefRecord, String> TENANT_ID_ = createField(DSL.name("TENANT_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>bysj.act_re_procdef.ENGINE_VERSION_</code>.
     */
    public final TableField<ActReProcdefRecord, String> ENGINE_VERSION_ = createField(DSL.name("ENGINE_VERSION_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>bysj.act_re_procdef</code> table reference
     */
    public ActReProcdef() {
        this(DSL.name("act_re_procdef"), null);
    }

    /**
     * Create an aliased <code>bysj.act_re_procdef</code> table reference
     */
    public ActReProcdef(String alias) {
        this(DSL.name(alias), ACT_RE_PROCDEF);
    }

    /**
     * Create an aliased <code>bysj.act_re_procdef</code> table reference
     */
    public ActReProcdef(Name alias) {
        this(alias, ACT_RE_PROCDEF);
    }

    private ActReProcdef(Name alias, Table<ActReProcdefRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActReProcdef(Name alias, Table<ActReProcdefRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ActReProcdef(Table<O> child, ForeignKey<O, ActReProcdefRecord> key) {
        super(child, key, ACT_RE_PROCDEF);
    }

    @Override
    public Schema getSchema() {
        return Bysj.BYSJ;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACT_RE_PROCDEF_ACT_UNIQ_PROCDEF, Indexes.ACT_RE_PROCDEF_PRIMARY);
    }

    @Override
    public UniqueKey<ActReProcdefRecord> getPrimaryKey() {
        return Keys.KEY_ACT_RE_PROCDEF_PRIMARY;
    }

    @Override
    public List<UniqueKey<ActReProcdefRecord>> getKeys() {
        return Arrays.<UniqueKey<ActReProcdefRecord>>asList(Keys.KEY_ACT_RE_PROCDEF_PRIMARY, Keys.KEY_ACT_RE_PROCDEF_ACT_UNIQ_PROCDEF);
    }

    @Override
    public ActReProcdef as(String alias) {
        return new ActReProcdef(DSL.name(alias), this);
    }

    @Override
    public ActReProcdef as(Name alias) {
        return new ActReProcdef(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActReProcdef rename(String name) {
        return new ActReProcdef(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActReProcdef rename(Name name) {
        return new ActReProcdef(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<String, Integer, String, String, String, Integer, String, String, String, String, Byte, Byte, Integer, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
