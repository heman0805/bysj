/*
 * This file is generated by jOOQ.
 */
package com.heman.bysj.jooq.tables.records;


import com.heman.bysj.jooq.tables.Changemajors;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChangemajorsRecord extends UpdatableRecordImpl<ChangemajorsRecord> implements Record11<Integer, Integer, String, String, String, Double, String, String, Integer, String, String> {

    private static final long serialVersionUID = -1821764193;

    /**
     * Setter for <code>bysj.changemajors.cid</code>. 转专业表主键ID
     */
    public void setCid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bysj.changemajors.cid</code>. 转专业表主键ID
     */
    public Integer getCid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bysj.changemajors.sid</code>. 转专业学生ID
     */
    public void setSid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>bysj.changemajors.sid</code>. 转专业学生ID
     */
    public Integer getSid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>bysj.changemajors.applyReason</code>. 转专业申请理由
     */
    public void setApplyreason(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bysj.changemajors.applyReason</code>. 转专业申请理由
     */
    public String getApplyreason() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bysj.changemajors.currentProfession</code>. 现专业
     */
    public void setCurrentprofession(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bysj.changemajors.currentProfession</code>. 现专业
     */
    public String getCurrentprofession() {
        return (String) get(3);
    }

    /**
     * Setter for <code>bysj.changemajors.newProfession</code>. 新专业
     */
    public void setNewprofession(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bysj.changemajors.newProfession</code>. 新专业
     */
    public String getNewprofession() {
        return (String) get(4);
    }

    /**
     * Setter for <code>bysj.changemajors.gpa</code>. 学生个人GPA
     */
    public void setGpa(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>bysj.changemajors.gpa</code>. 学生个人GPA
     */
    public Double getGpa() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>bysj.changemajors.rank</code>. 成绩排名
     */
    public void setRank(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>bysj.changemajors.rank</code>. 成绩排名
     */
    public String getRank() {
        return (String) get(6);
    }

    /**
     * Setter for <code>bysj.changemajors.state</code>. 申请状态（如：当前专业院长审批中）
     */
    public void setState(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>bysj.changemajors.state</code>. 申请状态（如：当前专业院长审批中）
     */
    public String getState() {
        return (String) get(7);
    }

    /**
     * Setter for <code>bysj.changemajors.result</code>. 转专业申请结果
     */
    public void setResult(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>bysj.changemajors.result</code>. 转专业申请结果
     */
    public Integer getResult() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>bysj.changemajors.post</code>. 申请过程中拒绝的环节（原专业院长）
     */
    public void setPost(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>bysj.changemajors.post</code>. 申请过程中拒绝的环节（原专业院长）
     */
    public String getPost() {
        return (String) get(9);
    }

    /**
     * Setter for <code>bysj.changemajors.refuseReason</code>. 拒绝理由
     */
    public void setRefusereason(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>bysj.changemajors.refuseReason</code>. 拒绝理由
     */
    public String getRefusereason() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, String, String, String, Double, String, String, Integer, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, Integer, String, String, String, Double, String, String, Integer, String, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Changemajors.CHANGEMAJORS.CID;
    }

    @Override
    public Field<Integer> field2() {
        return Changemajors.CHANGEMAJORS.SID;
    }

    @Override
    public Field<String> field3() {
        return Changemajors.CHANGEMAJORS.APPLYREASON;
    }

    @Override
    public Field<String> field4() {
        return Changemajors.CHANGEMAJORS.CURRENTPROFESSION;
    }

    @Override
    public Field<String> field5() {
        return Changemajors.CHANGEMAJORS.NEWPROFESSION;
    }

    @Override
    public Field<Double> field6() {
        return Changemajors.CHANGEMAJORS.GPA;
    }

    @Override
    public Field<String> field7() {
        return Changemajors.CHANGEMAJORS.RANK;
    }

    @Override
    public Field<String> field8() {
        return Changemajors.CHANGEMAJORS.STATE;
    }

    @Override
    public Field<Integer> field9() {
        return Changemajors.CHANGEMAJORS.RESULT;
    }

    @Override
    public Field<String> field10() {
        return Changemajors.CHANGEMAJORS.POST;
    }

    @Override
    public Field<String> field11() {
        return Changemajors.CHANGEMAJORS.REFUSEREASON;
    }

    @Override
    public Integer component1() {
        return getCid();
    }

    @Override
    public Integer component2() {
        return getSid();
    }

    @Override
    public String component3() {
        return getApplyreason();
    }

    @Override
    public String component4() {
        return getCurrentprofession();
    }

    @Override
    public String component5() {
        return getNewprofession();
    }

    @Override
    public Double component6() {
        return getGpa();
    }

    @Override
    public String component7() {
        return getRank();
    }

    @Override
    public String component8() {
        return getState();
    }

    @Override
    public Integer component9() {
        return getResult();
    }

    @Override
    public String component10() {
        return getPost();
    }

    @Override
    public String component11() {
        return getRefusereason();
    }

    @Override
    public Integer value1() {
        return getCid();
    }

    @Override
    public Integer value2() {
        return getSid();
    }

    @Override
    public String value3() {
        return getApplyreason();
    }

    @Override
    public String value4() {
        return getCurrentprofession();
    }

    @Override
    public String value5() {
        return getNewprofession();
    }

    @Override
    public Double value6() {
        return getGpa();
    }

    @Override
    public String value7() {
        return getRank();
    }

    @Override
    public String value8() {
        return getState();
    }

    @Override
    public Integer value9() {
        return getResult();
    }

    @Override
    public String value10() {
        return getPost();
    }

    @Override
    public String value11() {
        return getRefusereason();
    }

    @Override
    public ChangemajorsRecord value1(Integer value) {
        setCid(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value2(Integer value) {
        setSid(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value3(String value) {
        setApplyreason(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value4(String value) {
        setCurrentprofession(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value5(String value) {
        setNewprofession(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value6(Double value) {
        setGpa(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value7(String value) {
        setRank(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value8(String value) {
        setState(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value9(Integer value) {
        setResult(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value10(String value) {
        setPost(value);
        return this;
    }

    @Override
    public ChangemajorsRecord value11(String value) {
        setRefusereason(value);
        return this;
    }

    @Override
    public ChangemajorsRecord values(Integer value1, Integer value2, String value3, String value4, String value5, Double value6, String value7, String value8, Integer value9, String value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChangemajorsRecord
     */
    public ChangemajorsRecord() {
        super(Changemajors.CHANGEMAJORS);
    }

    /**
     * Create a detached, initialised ChangemajorsRecord
     */
    public ChangemajorsRecord(Integer cid, Integer sid, String applyreason, String currentprofession, String newprofession, Double gpa, String rank, String state, Integer result, String post, String refusereason) {
        super(Changemajors.CHANGEMAJORS);

        set(0, cid);
        set(1, sid);
        set(2, applyreason);
        set(3, currentprofession);
        set(4, newprofession);
        set(5, gpa);
        set(6, rank);
        set(7, state);
        set(8, result);
        set(9, post);
        set(10, refusereason);
    }
}
