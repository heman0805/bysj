/*
 * This file is generated by jOOQ.
 */
package com.heman.bysj.jooq.tables;


import com.heman.bysj.jooq.Bysj;
import com.heman.bysj.jooq.Indexes;
import com.heman.bysj.jooq.Keys;
import com.heman.bysj.jooq.tables.records.ActHiProcinstRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActHiProcinst extends TableImpl<ActHiProcinstRecord> {

    private static final long serialVersionUID = 271170492;

    /**
     * The reference instance of <code>bysj.act_hi_procinst</code>
     */
    public static final ActHiProcinst ACT_HI_PROCINST = new ActHiProcinst();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActHiProcinstRecord> getRecordType() {
        return ActHiProcinstRecord.class;
    }

    /**
     * The column <code>bysj.act_hi_procinst.ID_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> ID_ = createField(DSL.name("ID_"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.PROC_INST_ID_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> PROC_INST_ID_ = createField(DSL.name("PROC_INST_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.BUSINESS_KEY_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> BUSINESS_KEY_ = createField(DSL.name("BUSINESS_KEY_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.PROC_DEF_ID_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> PROC_DEF_ID_ = createField(DSL.name("PROC_DEF_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.START_TIME_</code>.
     */
    public final TableField<ActHiProcinstRecord, Timestamp> START_TIME_ = createField(DSL.name("START_TIME_"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.END_TIME_</code>.
     */
    public final TableField<ActHiProcinstRecord, Timestamp> END_TIME_ = createField(DSL.name("END_TIME_"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bysj.act_hi_procinst.DURATION_</code>.
     */
    public final TableField<ActHiProcinstRecord, Long> DURATION_ = createField(DSL.name("DURATION_"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>bysj.act_hi_procinst.START_USER_ID_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> START_USER_ID_ = createField(DSL.name("START_USER_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.START_ACT_ID_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> START_ACT_ID_ = createField(DSL.name("START_ACT_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.END_ACT_ID_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> END_ACT_ID_ = createField(DSL.name("END_ACT_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.SUPER_PROCESS_INSTANCE_ID_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> SUPER_PROCESS_INSTANCE_ID_ = createField(DSL.name("SUPER_PROCESS_INSTANCE_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.DELETE_REASON_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> DELETE_REASON_ = createField(DSL.name("DELETE_REASON_"), org.jooq.impl.SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.TENANT_ID_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> TENANT_ID_ = createField(DSL.name("TENANT_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>bysj.act_hi_procinst.NAME_</code>.
     */
    public final TableField<ActHiProcinstRecord, String> NAME_ = createField(DSL.name("NAME_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>bysj.act_hi_procinst</code> table reference
     */
    public ActHiProcinst() {
        this(DSL.name("act_hi_procinst"), null);
    }

    /**
     * Create an aliased <code>bysj.act_hi_procinst</code> table reference
     */
    public ActHiProcinst(String alias) {
        this(DSL.name(alias), ACT_HI_PROCINST);
    }

    /**
     * Create an aliased <code>bysj.act_hi_procinst</code> table reference
     */
    public ActHiProcinst(Name alias) {
        this(alias, ACT_HI_PROCINST);
    }

    private ActHiProcinst(Name alias, Table<ActHiProcinstRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActHiProcinst(Name alias, Table<ActHiProcinstRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ActHiProcinst(Table<O> child, ForeignKey<O, ActHiProcinstRecord> key) {
        super(child, key, ACT_HI_PROCINST);
    }

    @Override
    public Schema getSchema() {
        return Bysj.BYSJ;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACT_HI_PROCINST_ACT_IDX_HI_PRO_INST_END, Indexes.ACT_HI_PROCINST_ACT_IDX_HI_PRO_I_BUSKEY, Indexes.ACT_HI_PROCINST_PRIMARY, Indexes.ACT_HI_PROCINST_PROC_INST_ID_);
    }

    @Override
    public UniqueKey<ActHiProcinstRecord> getPrimaryKey() {
        return Keys.KEY_ACT_HI_PROCINST_PRIMARY;
    }

    @Override
    public List<UniqueKey<ActHiProcinstRecord>> getKeys() {
        return Arrays.<UniqueKey<ActHiProcinstRecord>>asList(Keys.KEY_ACT_HI_PROCINST_PRIMARY, Keys.KEY_ACT_HI_PROCINST_PROC_INST_ID_);
    }

    @Override
    public ActHiProcinst as(String alias) {
        return new ActHiProcinst(DSL.name(alias), this);
    }

    @Override
    public ActHiProcinst as(Name alias) {
        return new ActHiProcinst(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiProcinst rename(String name) {
        return new ActHiProcinst(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiProcinst rename(Name name) {
        return new ActHiProcinst(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, String, String, Timestamp, Timestamp, Long, String, String, String, String, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
