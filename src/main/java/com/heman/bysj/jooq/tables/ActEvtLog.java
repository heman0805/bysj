/*
 * This file is generated by jOOQ.
 */
package com.heman.bysj.jooq.tables;


import com.heman.bysj.jooq.Bysj;
import com.heman.bysj.jooq.Indexes;
import com.heman.bysj.jooq.Keys;
import com.heman.bysj.jooq.tables.records.ActEvtLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActEvtLog extends TableImpl<ActEvtLogRecord> {

    private static final long serialVersionUID = 1275581149;

    /**
     * The reference instance of <code>bysj.act_evt_log</code>
     */
    public static final ActEvtLog ACT_EVT_LOG = new ActEvtLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActEvtLogRecord> getRecordType() {
        return ActEvtLogRecord.class;
    }

    /**
     * The column <code>bysj.act_evt_log.LOG_NR_</code>.
     */
    public final TableField<ActEvtLogRecord, Long> LOG_NR_ = createField(DSL.name("LOG_NR_"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>bysj.act_evt_log.TYPE_</code>.
     */
    public final TableField<ActEvtLogRecord, String> TYPE_ = createField(DSL.name("TYPE_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_evt_log.PROC_DEF_ID_</code>.
     */
    public final TableField<ActEvtLogRecord, String> PROC_DEF_ID_ = createField(DSL.name("PROC_DEF_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_evt_log.PROC_INST_ID_</code>.
     */
    public final TableField<ActEvtLogRecord, String> PROC_INST_ID_ = createField(DSL.name("PROC_INST_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_evt_log.EXECUTION_ID_</code>.
     */
    public final TableField<ActEvtLogRecord, String> EXECUTION_ID_ = createField(DSL.name("EXECUTION_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_evt_log.TASK_ID_</code>.
     */
    public final TableField<ActEvtLogRecord, String> TASK_ID_ = createField(DSL.name("TASK_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_evt_log.TIME_STAMP_</code>.
     */
    public final TableField<ActEvtLogRecord, Timestamp> TIME_STAMP_ = createField(DSL.name("TIME_STAMP_"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP(3)", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>bysj.act_evt_log.USER_ID_</code>.
     */
    public final TableField<ActEvtLogRecord, String> USER_ID_ = createField(DSL.name("USER_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_evt_log.DATA_</code>.
     */
    public final TableField<ActEvtLogRecord, byte[]> DATA_ = createField(DSL.name("DATA_"), org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>bysj.act_evt_log.LOCK_OWNER_</code>.
     */
    public final TableField<ActEvtLogRecord, String> LOCK_OWNER_ = createField(DSL.name("LOCK_OWNER_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_evt_log.LOCK_TIME_</code>.
     */
    public final TableField<ActEvtLogRecord, Timestamp> LOCK_TIME_ = createField(DSL.name("LOCK_TIME_"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>bysj.act_evt_log.IS_PROCESSED_</code>.
     */
    public final TableField<ActEvtLogRecord, Byte> IS_PROCESSED_ = createField(DSL.name("IS_PROCESSED_"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>bysj.act_evt_log</code> table reference
     */
    public ActEvtLog() {
        this(DSL.name("act_evt_log"), null);
    }

    /**
     * Create an aliased <code>bysj.act_evt_log</code> table reference
     */
    public ActEvtLog(String alias) {
        this(DSL.name(alias), ACT_EVT_LOG);
    }

    /**
     * Create an aliased <code>bysj.act_evt_log</code> table reference
     */
    public ActEvtLog(Name alias) {
        this(alias, ACT_EVT_LOG);
    }

    private ActEvtLog(Name alias, Table<ActEvtLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActEvtLog(Name alias, Table<ActEvtLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ActEvtLog(Table<O> child, ForeignKey<O, ActEvtLogRecord> key) {
        super(child, key, ACT_EVT_LOG);
    }

    @Override
    public Schema getSchema() {
        return Bysj.BYSJ;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACT_EVT_LOG_PRIMARY);
    }

    @Override
    public Identity<ActEvtLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_ACT_EVT_LOG;
    }

    @Override
    public UniqueKey<ActEvtLogRecord> getPrimaryKey() {
        return Keys.KEY_ACT_EVT_LOG_PRIMARY;
    }

    @Override
    public List<UniqueKey<ActEvtLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ActEvtLogRecord>>asList(Keys.KEY_ACT_EVT_LOG_PRIMARY);
    }

    @Override
    public ActEvtLog as(String alias) {
        return new ActEvtLog(DSL.name(alias), this);
    }

    @Override
    public ActEvtLog as(Name alias) {
        return new ActEvtLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActEvtLog rename(String name) {
        return new ActEvtLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActEvtLog rename(Name name) {
        return new ActEvtLog(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, String, String, String, String, String, Timestamp, String, byte[], String, Timestamp, Byte> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
