/*
 * This file is generated by jOOQ.
 */
package com.heman.bysj.jooq.tables;


import com.heman.bysj.jooq.Bysj;
import com.heman.bysj.jooq.Indexes;
import com.heman.bysj.jooq.Keys;
import com.heman.bysj.jooq.tables.records.ActRuEventSubscrRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActRuEventSubscr extends TableImpl<ActRuEventSubscrRecord> {

    private static final long serialVersionUID = -814456736;

    /**
     * The reference instance of <code>bysj.act_ru_event_subscr</code>
     */
    public static final ActRuEventSubscr ACT_RU_EVENT_SUBSCR = new ActRuEventSubscr();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActRuEventSubscrRecord> getRecordType() {
        return ActRuEventSubscrRecord.class;
    }

    /**
     * The column <code>bysj.act_ru_event_subscr.ID_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, String> ID_ = createField(DSL.name("ID_"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.REV_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, Integer> REV_ = createField(DSL.name("REV_"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.EVENT_TYPE_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, String> EVENT_TYPE_ = createField(DSL.name("EVENT_TYPE_"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.EVENT_NAME_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, String> EVENT_NAME_ = createField(DSL.name("EVENT_NAME_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.EXECUTION_ID_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, String> EXECUTION_ID_ = createField(DSL.name("EXECUTION_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.PROC_INST_ID_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, String> PROC_INST_ID_ = createField(DSL.name("PROC_INST_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.ACTIVITY_ID_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, String> ACTIVITY_ID_ = createField(DSL.name("ACTIVITY_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.CONFIGURATION_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, String> CONFIGURATION_ = createField(DSL.name("CONFIGURATION_"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.CREATED_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, Timestamp> CREATED_ = createField(DSL.name("CREATED_"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP(3)", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.PROC_DEF_ID_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, String> PROC_DEF_ID_ = createField(DSL.name("PROC_DEF_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bysj.act_ru_event_subscr.TENANT_ID_</code>.
     */
    public final TableField<ActRuEventSubscrRecord, String> TENANT_ID_ = createField(DSL.name("TENANT_ID_"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>bysj.act_ru_event_subscr</code> table reference
     */
    public ActRuEventSubscr() {
        this(DSL.name("act_ru_event_subscr"), null);
    }

    /**
     * Create an aliased <code>bysj.act_ru_event_subscr</code> table reference
     */
    public ActRuEventSubscr(String alias) {
        this(DSL.name(alias), ACT_RU_EVENT_SUBSCR);
    }

    /**
     * Create an aliased <code>bysj.act_ru_event_subscr</code> table reference
     */
    public ActRuEventSubscr(Name alias) {
        this(alias, ACT_RU_EVENT_SUBSCR);
    }

    private ActRuEventSubscr(Name alias, Table<ActRuEventSubscrRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActRuEventSubscr(Name alias, Table<ActRuEventSubscrRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ActRuEventSubscr(Table<O> child, ForeignKey<O, ActRuEventSubscrRecord> key) {
        super(child, key, ACT_RU_EVENT_SUBSCR);
    }

    @Override
    public Schema getSchema() {
        return Bysj.BYSJ;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACT_RU_EVENT_SUBSCR_ACT_FK_EVENT_EXEC, Indexes.ACT_RU_EVENT_SUBSCR_ACT_IDX_EVENT_SUBSCR_CONFIG_, Indexes.ACT_RU_EVENT_SUBSCR_PRIMARY);
    }

    @Override
    public UniqueKey<ActRuEventSubscrRecord> getPrimaryKey() {
        return Keys.KEY_ACT_RU_EVENT_SUBSCR_PRIMARY;
    }

    @Override
    public List<UniqueKey<ActRuEventSubscrRecord>> getKeys() {
        return Arrays.<UniqueKey<ActRuEventSubscrRecord>>asList(Keys.KEY_ACT_RU_EVENT_SUBSCR_PRIMARY);
    }

    @Override
    public List<ForeignKey<ActRuEventSubscrRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ActRuEventSubscrRecord, ?>>asList(Keys.ACT_FK_EVENT_EXEC);
    }

    public ActRuExecution actRuExecution() {
        return new ActRuExecution(this, Keys.ACT_FK_EVENT_EXEC);
    }

    @Override
    public ActRuEventSubscr as(String alias) {
        return new ActRuEventSubscr(DSL.name(alias), this);
    }

    @Override
    public ActRuEventSubscr as(Name alias) {
        return new ActRuEventSubscr(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuEventSubscr rename(String name) {
        return new ActRuEventSubscr(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuEventSubscr rename(Name name) {
        return new ActRuEventSubscr(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, Integer, String, String, String, String, String, String, Timestamp, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
