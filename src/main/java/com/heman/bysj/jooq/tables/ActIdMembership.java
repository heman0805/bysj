/*
 * This file is generated by jOOQ.
 */
package com.heman.bysj.jooq.tables;


import com.heman.bysj.jooq.Bysj;
import com.heman.bysj.jooq.Indexes;
import com.heman.bysj.jooq.Keys;
import com.heman.bysj.jooq.tables.records.ActIdMembershipRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActIdMembership extends TableImpl<ActIdMembershipRecord> {

    private static final long serialVersionUID = 631723177;

    /**
     * The reference instance of <code>bysj.act_id_membership</code>
     */
    public static final ActIdMembership ACT_ID_MEMBERSHIP = new ActIdMembership();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActIdMembershipRecord> getRecordType() {
        return ActIdMembershipRecord.class;
    }

    /**
     * The column <code>bysj.act_id_membership.USER_ID_</code>.
     */
    public final TableField<ActIdMembershipRecord, String> USER_ID_ = createField(DSL.name("USER_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bysj.act_id_membership.GROUP_ID_</code>.
     */
    public final TableField<ActIdMembershipRecord, String> GROUP_ID_ = createField(DSL.name("GROUP_ID_"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>bysj.act_id_membership</code> table reference
     */
    public ActIdMembership() {
        this(DSL.name("act_id_membership"), null);
    }

    /**
     * Create an aliased <code>bysj.act_id_membership</code> table reference
     */
    public ActIdMembership(String alias) {
        this(DSL.name(alias), ACT_ID_MEMBERSHIP);
    }

    /**
     * Create an aliased <code>bysj.act_id_membership</code> table reference
     */
    public ActIdMembership(Name alias) {
        this(alias, ACT_ID_MEMBERSHIP);
    }

    private ActIdMembership(Name alias, Table<ActIdMembershipRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActIdMembership(Name alias, Table<ActIdMembershipRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ActIdMembership(Table<O> child, ForeignKey<O, ActIdMembershipRecord> key) {
        super(child, key, ACT_ID_MEMBERSHIP);
    }

    @Override
    public Schema getSchema() {
        return Bysj.BYSJ;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACT_ID_MEMBERSHIP_ACT_FK_MEMB_GROUP, Indexes.ACT_ID_MEMBERSHIP_PRIMARY);
    }

    @Override
    public UniqueKey<ActIdMembershipRecord> getPrimaryKey() {
        return Keys.KEY_ACT_ID_MEMBERSHIP_PRIMARY;
    }

    @Override
    public List<UniqueKey<ActIdMembershipRecord>> getKeys() {
        return Arrays.<UniqueKey<ActIdMembershipRecord>>asList(Keys.KEY_ACT_ID_MEMBERSHIP_PRIMARY);
    }

    @Override
    public List<ForeignKey<ActIdMembershipRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ActIdMembershipRecord, ?>>asList(Keys.ACT_FK_MEMB_USER, Keys.ACT_FK_MEMB_GROUP);
    }

    public ActIdUser actIdUser() {
        return new ActIdUser(this, Keys.ACT_FK_MEMB_USER);
    }

    public ActIdGroup actIdGroup() {
        return new ActIdGroup(this, Keys.ACT_FK_MEMB_GROUP);
    }

    @Override
    public ActIdMembership as(String alias) {
        return new ActIdMembership(DSL.name(alias), this);
    }

    @Override
    public ActIdMembership as(Name alias) {
        return new ActIdMembership(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActIdMembership rename(String name) {
        return new ActIdMembership(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActIdMembership rename(Name name) {
        return new ActIdMembership(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
